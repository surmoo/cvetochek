<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>–ü–æ–π–º–∞–π —Ü–≤–µ—Ç–æ—á–µ–∫</title>
  <style>
    /* –°–±—Ä–æ—Å –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ */
    * { margin: 0; padding: 0; }
    html, body {
      width: 100%;
      height: 100%;
      overflow: hidden;
      background: #e0f7fa;
    }
    canvas { display: block; }
    /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–∞–±–ª–æ */
    #scoreboard {
      position: absolute;
      top: 10px;
      left: 10px;
      font-family: Arial, sans-serif;
      font-size: 24px;
      color: #333;
      background: rgba(255,255,255,0.8);
      padding: 5px 10px;
      border-radius: 8px;
    }
  </style>
</head>
<body>
  <!-- –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á—ë—Ç–∞ –∏ –ø—Ä–æ–º–∞—Ö–æ–≤ -->
  <div id="scoreboard">–°—á—ë—Ç: 0 | –ü—Ä–æ–º–∞—Ö–æ–≤: 0</div>
  <canvas id="gameCanvas"></canvas>
  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    const scoreboard = document.getElementById('scoreboard');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–∞–Ω–≤–∞—Å–∞ –ø–æ–¥ –æ–∫–Ω–æ
    function resizeCanvas() {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    }
    window.addEventListener('resize', resizeCanvas);
    resizeCanvas();
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
    let score = 0;
    let misses = 0;
    let gameOver = false;
    const emojis = [];       // –ú–∞—Å—Å–∏–≤ –¥–ª—è –ø–∞–¥–∞—é—â–∏—Ö —ç–º–æ–¥–∑–∏
    const emojiSize = 50;    // –†–∞–∑–º–µ—Ä —ç–º–æ–¥–∑–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–º–æ–¥–∑–∏
    function spawnEmoji() {
      // –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50% —ç–º–æ–¥–∑–∏ ‚Äì —ç—Ç–æ —Ü–≤–µ—Ç–æ—á–µ–∫ (üå∏), –∏–Ω–∞—á–µ ‚Äì –¥—Ä—É–≥–æ–π (‚ùÑÔ∏è –∏–ª–∏ üçÇ)
      const isFlower = Math.random() < 0.5;
      const emojiChar = isFlower ? 'üå∏' : (Math.random() < 0.5 ? '‚ùÑÔ∏è' : 'üçÇ');
      const x = Math.random() * (canvas.width - emojiSize);
      const y = -emojiSize; // –Ω–∞—á–∏–Ω–∞–µ–º –≤–Ω–µ —ç–∫—Ä–∞–Ω–∞ —Å–≤–µ—Ä—Ö—É
      const speed = 2 + Math.random() * 3;
      emojis.push({ x, y, speed, isFlower, char: emojiChar });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞–Ω–≤–∞—Å—É
    canvas.addEventListener('click', function(e) {
      if (gameOver) return; // –µ—Å–ª–∏ –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –∫–ª–∏–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
      const rect = canvas.getBoundingClientRect();
      const clickX = e.clientX - rect.left;
      const clickY = e.clientY - rect.top;
      let hitEmoji = false;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ –∫–∞–∫–æ–º—É-–ª–∏–±–æ —ç–º–æ–¥–∑–∏
      for (let i = emojis.length - 1; i >= 0; i--) {
        const emoji = emojis[i];
        if (
          clickX >= emoji.x &&
          clickX <= emoji.x + emojiSize &&
          clickY >= emoji.y &&
          clickY <= emoji.y + emojiSize
        ) {
          hitEmoji = true;
          if (emoji.isFlower) {
            score++;
          } else {
            misses++;
          }
          emojis.splice(i, 1); // —É–¥–∞–ª—è–µ–º –ø–æ–π–º–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏
          break;
        }
      }
      if (!hitEmoji) {
        // –ï—Å–ª–∏ –∫–ª–∏–∫ –Ω–µ –ø–æ–ø–∞–ª –Ω–∏ –≤ –æ–¥–∏–Ω —ç–º–æ–¥–∑–∏ ‚Äì –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–º–∞—Ö
        misses++;
      }
      updateScoreboard();
      checkGameOver();
    });
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–æ
    function updateScoreboard() {
      scoreboard.innerText = `–°—á—ë—Ç: ${score} | –ü—Ä–æ–º–∞—Ö–æ–≤: ${misses}`;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
    function checkGameOver() {
      if (misses >= 3) {
        gameOver = true;
        setTimeout(() => {
          alert("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á—ë—Ç: " + score);
          resetGame();
        }, 10);
      }
    }
    
    // –°–±—Ä–æ—Å –∏–≥—Ä—ã
    function resetGame() {
      score = 0;
      misses = 0;
      emojis.length = 0;
      gameOver = false;
      updateScoreboard();
    }
    
    // –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–≥—Ä—ã
    function update() {
      if (!gameOver) {
        // –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 2% –∑–∞ –∫–∞–¥—Ä —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ —ç–º–æ–¥–∑–∏
        if (Math.random() < 0.02) spawnEmoji();
      }
      
      // –û—á–∏—â–∞–µ–º –∫–∞–Ω–≤–∞—Å
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.font = emojiSize + "px serif";
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–∏—Å—É–µ–º —ç–º–æ–¥–∑–∏
      for (let i = emojis.length - 1; i >= 0; i--) {
        const emoji = emojis[i];
        emoji.y += emoji.speed;
        ctx.fillText(emoji.char, emoji.x, emoji.y + emojiSize);
        // –ï—Å–ª–∏ —ç–º–æ–¥–∑–∏ –≤—ã—à–µ–ª –∑–∞ –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É ‚Äì —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–º–∞—Ö
        if (emoji.y > canvas.height) {
          emojis.splice(i, 1);
          misses++;
          updateScoreboard();
          checkGameOver();
        }
      }
      requestAnimationFrame(update);
    }
    
    update();
  </script>
</body>
</html>
